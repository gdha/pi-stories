{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Raspberry PI k3s stories \u00b6 You can use the editor on GitHub to maintain and preview the content for your website in Markdown files. Whenever you commit to this repository, GitHub Pages will run Jekyll to rebuild the pages in your site, from the content in your Markdown files. Markdown Syntax \u00b6 Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for Syntax highlighted code block # Header 1 ## Header 2 ### Header 3 - Bulleted - List 1. Numbered 2. List **Bold** and _Italic_ and `Code` text [Link](url) and ![Image](src) For more details see GitHub Flavored Markdown . Mkdocs Themes with GitHub Pages \u00b6 Read how to set-up the site with GitHub pages Support or Contact \u00b6 Having trouble with Pages? Check out our documentation or contact support and we\u2019ll help you sort it out.","title":"WELCOME"},{"location":"#welcome_to_raspberry_pi_k3s_stories","text":"You can use the editor on GitHub to maintain and preview the content for your website in Markdown files. Whenever you commit to this repository, GitHub Pages will run Jekyll to rebuild the pages in your site, from the content in your Markdown files.","title":"Welcome to Raspberry PI k3s stories"},{"location":"#markdown_syntax","text":"Markdown is a lightweight and easy-to-use syntax for styling your writing. It includes conventions for Syntax highlighted code block # Header 1 ## Header 2 ### Header 3 - Bulleted - List 1. Numbered 2. List **Bold** and _Italic_ and `Code` text [Link](url) and ![Image](src) For more details see GitHub Flavored Markdown .","title":"Markdown Syntax"},{"location":"#mkdocs_themes_with_github_pages","text":"Read how to set-up the site with GitHub pages","title":"Mkdocs Themes with GitHub Pages"},{"location":"#support_or_contact","text":"Having trouble with Pages? Check out our documentation or contact support and we\u2019ll help you sort it out.","title":"Support or Contact"},{"location":"pi-stories/","text":"PI4 Stories \u00b6 Raspberry Pi 4 cluster Series - Basic OS configuration \u00b6 Before we can build a PI 4 cluster using kubernetes software of some kind (most likely k3s) we need to buy the required hardware to begin with. In our case we decided to go for 5 Raspberry Pi's type 4 with 4 GB RAM. We leave the exercise to you what size of SD card you want (more GB cost more money, but gives you some room for expansion later on). We also bought some small USB sticks (type SanDisk Ultra Fit USB 3.1 flash drive 128 GB) for building an object oriented file system (but that is for a later series). Also, we bought some PI cases with fans built-in to keep the processor cool as we know kubernetes may heat up the processor [1]. We noticed that the temperature of a case with fans is around 40 degrees Celsius where with a metal case only (without fans) it is around 60 degrees Celsius. Decided to buy quickly an extra case with fans as it is worth its money. We were charmed with Ubuntu 20 series software and downloaded the Pi4 64-bit version and used the dd command to burn it onto the SD cards [2]. Link it all together to start a Pi computer one at the time. The first time we hooked the micro-HDMI to a TV-screen so we could watch the first kick off and to see everything looked right. Also, we needed to reset the default password of the built-in account named 'ubuntu'. By default the Pi computer is using DHCP for retrieving IP addresses, but we want to assign a static IPv4 address. Therefore, think ahaid and use something like this: cat >> /etc/hosts <<EOF # PI cluster 192.168.0.201 n1 192.168.0.202 n2 192.168.0.203 n3 192.168.0.204 n4 192.168.0.205 n5 EOF Of course, change the IPv4 addresses to your local taste. It is also a good idea to hard-code your local timezone, in our case we choose for Europe/Brussels, e.g. timedatectl set-timezone Europe/Brussels The kubernetes cluster (not yet of course) prefers not having IPv6 active, therefore, disable it via: echo \"net.ipv6.conf.all.disable_ipv6 = 1\" >> /etc/sysctl.conf sysctl -p And, check the time settings: systemctl status systemd-timesyncd To disable DHCP at next restart execute the following: cat > /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg <<EOF # network: {config: disabled} network: ethernets: eth0: dhcp4: true optional: true version: 2 EOF And, lets hide the original netplan yaml file: mkdir /etc/netplan/.hide mv /etc/netplan/50-cloud-init.yaml /etc/netplan/.hide The following steps differ node per node as we will define the hostname and fix the IPv4 address: hostnamectl set-hostname n1 Be careful, to use the correct hostname in above command. To define your permanent IPv4 address create your own netplan configuration as follow: cat > /etc/netplan/01-netcfg.yaml <<EOF # This file describes the network interfaces available on your system # For more information, see netplan(5). network: version: 2 renderer: networkd ethernets: eth0: dhcp4: no # IP address/subnet mask addresses: [192.168.0.201/24] # default gateway gateway4: 192.168.0.1 nameservers: # name server this host refers addresses: [192.168.0.1,8.8.8.8] dhcp6: no EOF Then, edit the file /etc/netplan/01-netcfg.yaml to adjust the correct IPv4 address of the node and also modify the gateway IPv4 address to your needs. On your laptop (or control server) we also add the IPv4 addresses of our Pi systems to the /etc/hosts file and to make your live easy copy your public OpenSSH keys to the ubuntu account like: ssh-copy-id ubuntu@n[1-5] Reboot this Pi computer and try to login via your laptop using ssh ubuntu@n1 OK so far for the first part, but just want to share picture of our setup with 5 Raspberry Pi's 4 nodes n[1-5]: References: \u00b6 [1] Joy-it Armor case \"Block Active\" for Raspberry Pi 4 [2] Download your Ubuntu Pi image Edit history \u00b6 Initial post on 01/Jul/2020 Updated title on 09/Sep/2020","title":"Raspberry Pi 4 Basic OS Configuration"},{"location":"pi-stories/#pi4_stories","text":"","title":"PI4 Stories"},{"location":"pi-stories/#raspberry_pi_4_cluster_series_-_basic_os_configuration","text":"Before we can build a PI 4 cluster using kubernetes software of some kind (most likely k3s) we need to buy the required hardware to begin with. In our case we decided to go for 5 Raspberry Pi's type 4 with 4 GB RAM. We leave the exercise to you what size of SD card you want (more GB cost more money, but gives you some room for expansion later on). We also bought some small USB sticks (type SanDisk Ultra Fit USB 3.1 flash drive 128 GB) for building an object oriented file system (but that is for a later series). Also, we bought some PI cases with fans built-in to keep the processor cool as we know kubernetes may heat up the processor [1]. We noticed that the temperature of a case with fans is around 40 degrees Celsius where with a metal case only (without fans) it is around 60 degrees Celsius. Decided to buy quickly an extra case with fans as it is worth its money. We were charmed with Ubuntu 20 series software and downloaded the Pi4 64-bit version and used the dd command to burn it onto the SD cards [2]. Link it all together to start a Pi computer one at the time. The first time we hooked the micro-HDMI to a TV-screen so we could watch the first kick off and to see everything looked right. Also, we needed to reset the default password of the built-in account named 'ubuntu'. By default the Pi computer is using DHCP for retrieving IP addresses, but we want to assign a static IPv4 address. Therefore, think ahaid and use something like this: cat >> /etc/hosts <<EOF # PI cluster 192.168.0.201 n1 192.168.0.202 n2 192.168.0.203 n3 192.168.0.204 n4 192.168.0.205 n5 EOF Of course, change the IPv4 addresses to your local taste. It is also a good idea to hard-code your local timezone, in our case we choose for Europe/Brussels, e.g. timedatectl set-timezone Europe/Brussels The kubernetes cluster (not yet of course) prefers not having IPv6 active, therefore, disable it via: echo \"net.ipv6.conf.all.disable_ipv6 = 1\" >> /etc/sysctl.conf sysctl -p And, check the time settings: systemctl status systemd-timesyncd To disable DHCP at next restart execute the following: cat > /etc/cloud/cloud.cfg.d/99-disable-network-config.cfg <<EOF # network: {config: disabled} network: ethernets: eth0: dhcp4: true optional: true version: 2 EOF And, lets hide the original netplan yaml file: mkdir /etc/netplan/.hide mv /etc/netplan/50-cloud-init.yaml /etc/netplan/.hide The following steps differ node per node as we will define the hostname and fix the IPv4 address: hostnamectl set-hostname n1 Be careful, to use the correct hostname in above command. To define your permanent IPv4 address create your own netplan configuration as follow: cat > /etc/netplan/01-netcfg.yaml <<EOF # This file describes the network interfaces available on your system # For more information, see netplan(5). network: version: 2 renderer: networkd ethernets: eth0: dhcp4: no # IP address/subnet mask addresses: [192.168.0.201/24] # default gateway gateway4: 192.168.0.1 nameservers: # name server this host refers addresses: [192.168.0.1,8.8.8.8] dhcp6: no EOF Then, edit the file /etc/netplan/01-netcfg.yaml to adjust the correct IPv4 address of the node and also modify the gateway IPv4 address to your needs. On your laptop (or control server) we also add the IPv4 addresses of our Pi systems to the /etc/hosts file and to make your live easy copy your public OpenSSH keys to the ubuntu account like: ssh-copy-id ubuntu@n[1-5] Reboot this Pi computer and try to login via your laptop using ssh ubuntu@n1 OK so far for the first part, but just want to share picture of our setup with 5 Raspberry Pi's 4 nodes n[1-5]:","title":"Raspberry Pi 4 cluster Series - Basic OS configuration"},{"location":"pi-stories/#references","text":"[1] Joy-it Armor case \"Block Active\" for Raspberry Pi 4 [2] Download your Ubuntu Pi image","title":"References:"},{"location":"pi-stories/#edit_history","text":"Initial post on 01/Jul/2020 Updated title on 09/Sep/2020","title":"Edit history"},{"location":"pi-stories2/","text":"PI4 Stories \u00b6 Raspberry Pi 4 cluster Series - Prepare for kubernetes installation \u00b6 Add account with Secure Shell keys and common software packages \u00b6 It is important that my account is created on each host with the requires secure shell keys. Also, we install what we think are required software packages on each host: vim git rsync acl dnsutils dphys-swapfile python-is-python3 sshpass ca-certificates curl gnupg-agent software-properties-common jq To get going first install git on the system where you start ansible playbooks (in our case it is host n5) and afterwards, clone the playbook pi4-cluster-ansible-roles . Do check the inventory.yml file and add you preferences. The playbook will also disable swap on each host, which is a requirement for kubernetes. Compile ARM side libraries for interfacing to Raspberry Pi GPU \u00b6 Download the source code from 2 . Compile and install these binaries on the host from where you will use the playbook. In my case its was host n5 (do not forget to install ansible ). Run the ansible playbook provision.yml \u00b6 $ ansible-playbook provision.yml -k --vault-password-file .my_password SSH password: PLAY [all] ************************************************************************************************************************************* TASK [Gathering Facts] ************************************************************************************************************************* ok: [n5] ok: [n3] ok: [n2] ok: [n4] ok: [n1] TASK [user : debug] **************************************************************************************************************************** ok: [n1] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n2] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n3] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n4] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n5] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } TASK [user : Creating admin group] ************************************************************************************************************* ok: [n3] ok: [n1] ok: [n4] ok: [n2] ok: [n5] TASK [user : Add group gdha (1001)] ************************************************************************************************************ ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [user : Add user 'gdha' with specific uid (1001) and group 'gdha' (1001) and secondary group 'admin'] ************************************* ok: [n5] ok: [n2] ok: [n3] ok: [n1] ok: [n4] TASK [user : Create the /home/gdha/.ssh directory] ********************************************************************************************* ok: [n2] ok: [n1] ok: [n3] ok: [n4] ok: [n5] TASK [user : Copy /home/gdha/.ssh/id_rsa.pub to remote nodes] ********************************************************************************** ok: [n2] ok: [n3] ok: [n1] ok: [n4] ok: [n5] TASK [user : Append public ssh key of gdha to authorized_keys] ********************************************************************************* changed: [n1] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n4] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n2] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n3] => (item=/home/gdha/.ssh/id_rsa.pub) ok: [n5] => (item=/home/gdha/.ssh/id_rsa.pub) TASK [user : Create /etc/sudoers.d/gdha-sudoers file] ****************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [base : Set /etc/hosts for other nodes] *************************************************************************************************** ok: [n1] => (item=n2) ok: [n2] => (item=n1) ok: [n3] => (item=n1) ok: [n4] => (item=n1) ok: [n5] => (item=n1) ok: [n1] => (item=n3) ok: [n2] => (item=n3) ok: [n3] => (item=n2) ok: [n4] => (item=n2) ok: [n5] => (item=n2) ok: [n1] => (item=n4) ok: [n2] => (item=n4) ok: [n4] => (item=n3) ok: [n3] => (item=n4) ok: [n5] => (item=n3) ok: [n1] => (item=n5) ok: [n2] => (item=n5) ok: [n4] => (item=n5) ok: [n3] => (item=n5) ok: [n5] => (item=n4) TASK [base : Install common packages] ********************************************************************************************************** ok: [n5] changed: [n2] changed: [n3] changed: [n4] changed: [n1] TASK [base : Set default locale] *************************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [base : Enable locale] ******************************************************************************************************************** ok: [n2] ok: [n1] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Create directory /opt/vc/bin] ****************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : copy tvservice to /opt/vc/bin] ***************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Create the /opt/vc/lib directory] ************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Copy /opt/vc/lib/libvchiq_arm.so] ************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Copy /opt/vc/lib/libvcos.so] ******************************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : add /opt/vc/lib to /etc/ld.so.conf file] ******************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Run ldconfig] ********************************************************************************************************************** changed: [n2] changed: [n1] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Check if HDMI is on] *************************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Switch off HDMI] ******************************************************************************************************************* changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Ensure rc.local exists] ************************************************************************************************************ changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Switch off HDMI on boot] *********************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [os : Set hostname] *********************************************************************************************************************** ok: [n2] ok: [n3] ok: [n1] ok: [n4] ok: [n5] TASK [os : Set /etc/hosts hostname] ************************************************************************************************************ ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [os : Check if swap is enabled] *********************************************************************************************************** changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [os : Disable swap] *********************************************************************************************************************** changed: [n1] => (item=dphys-swapfile swapoff) changed: [n2] => (item=dphys-swapfile swapoff) changed: [n3] => (item=dphys-swapfile swapoff) changed: [n4] => (item=dphys-swapfile swapoff) changed: [n5] => (item=dphys-swapfile swapoff) changed: [n1] => (item=dphys-swapfile uninstall) changed: [n2] => (item=dphys-swapfile uninstall) changed: [n3] => (item=dphys-swapfile uninstall) changed: [n4] => (item=dphys-swapfile uninstall) changed: [n5] => (item=dphys-swapfile uninstall) changed: [n2] => (item=update-rc.d dphys-swapfile disable) changed: [n3] => (item=update-rc.d dphys-swapfile disable) changed: [n1] => (item=update-rc.d dphys-swapfile disable) changed: [n4] => (item=update-rc.d dphys-swapfile disable) changed: [n5] => (item=update-rc.d dphys-swapfile disable) TASK [os : Add users to passwordless sudoers.] ************************************************************************************************* ok: [n1] => (item=gdha) ok: [n2] => (item=gdha) ok: [n3] => (item=gdha) ok: [n4] => (item=gdha) ok: [n5] => (item=gdha) ok: [n1] => (item=ubuntu) ok: [n2] => (item=ubuntu) ok: [n3] => (item=ubuntu) ok: [n4] => (item=ubuntu) ok: [n5] => (item=ubuntu) TASK [ssh : Check if ssh key exists] *********************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Create .ssh directory] ************************************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Generate ssh key] ****************************************************************************************************************** skipping: [n5] changed: [n1] changed: [n3] changed: [n2] changed: [n4] TASK [ssh : Slurp public keys from all nodes] ************************************************************************************************** ok: [n1] ok: [n3] ok: [n2] ok: [n4] ok: [n5] TASK [ssh : Copy public keys of all nodes into authorized_keys] ******************************************************************************** skipping: [n1] => (item=n1) skipping: [n1] => (item=n2) skipping: [n1] => (item=n3) skipping: [n1] => (item=n4) skipping: [n1] => (item=n5) skipping: [n2] => (item=n1) skipping: [n2] => (item=n2) skipping: [n2] => (item=n3) skipping: [n2] => (item=n4) skipping: [n2] => (item=n5) skipping: [n3] => (item=n1) skipping: [n3] => (item=n2) skipping: [n3] => (item=n3) skipping: [n3] => (item=n4) skipping: [n3] => (item=n5) skipping: [n4] => (item=n1) skipping: [n4] => (item=n2) skipping: [n4] => (item=n3) skipping: [n4] => (item=n4) skipping: [n4] => (item=n5) skipping: [n5] => (item=n1) skipping: [n5] => (item=n2) skipping: [n5] => (item=n3) skipping: [n5] => (item=n4) skipping: [n5] => (item=n5) TASK [ssh : Copy local public key to authorized_keys] ****************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Slurp host keys from all nodes] **************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Insert all nodes into global known_hosts] ****************************************************************************************** ok: [n1] => (item=n1) ok: [n2] => (item=n1) ok: [n3] => (item=n1) ok: [n4] => (item=n1) ok: [n5] => (item=n1) ok: [n2] => (item=n2) ok: [n3] => (item=n2) ok: [n1] => (item=n2) ok: [n4] => (item=n2) ok: [n5] => (item=n2) ok: [n2] => (item=n3) ok: [n3] => (item=n3) ok: [n4] => (item=n3) ok: [n1] => (item=n3) ok: [n5] => (item=n3) ok: [n2] => (item=n4) ok: [n3] => (item=n4) ok: [n4] => (item=n4) ok: [n1] => (item=n4) ok: [n5] => (item=n4) ok: [n2] => (item=n5) ok: [n3] => (item=n5) ok: [n4] => (item=n5) ok: [n1] => (item=n5) ok: [n5] => (item=n5) TASK [ssh : Secure SSH configuration] ********************************************************************************************************** ok: [n1] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) TASK [ssh : Secure SSH hosts configuration] **************************************************************************************************** ok: [n1] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) PLAY RECAP ************************************************************************************************************************************* n1 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n2 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n3 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n4 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n5 : ok=37 changed=5 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 References \u00b6 [1] Ansible pi4-cluster-ansible-roles playbook [2] Source code for ARM side libraries for interfacing to Raspberry Pi GPU Edit history \u00b6 initial post on 09/Sep/2020","title":"Raspberry Pi 4 Prepare for kubernetes"},{"location":"pi-stories2/#pi4_stories","text":"","title":"PI4 Stories"},{"location":"pi-stories2/#raspberry_pi_4_cluster_series_-_prepare_for_kubernetes_installation","text":"","title":"Raspberry Pi 4 cluster Series - Prepare for kubernetes installation"},{"location":"pi-stories2/#add_account_with_secure_shell_keys_and_common_software_packages","text":"It is important that my account is created on each host with the requires secure shell keys. Also, we install what we think are required software packages on each host: vim git rsync acl dnsutils dphys-swapfile python-is-python3 sshpass ca-certificates curl gnupg-agent software-properties-common jq To get going first install git on the system where you start ansible playbooks (in our case it is host n5) and afterwards, clone the playbook pi4-cluster-ansible-roles . Do check the inventory.yml file and add you preferences. The playbook will also disable swap on each host, which is a requirement for kubernetes.","title":"Add account with Secure Shell keys and common software packages"},{"location":"pi-stories2/#compile_arm_side_libraries_for_interfacing_to_raspberry_pi_gpu","text":"Download the source code from 2 . Compile and install these binaries on the host from where you will use the playbook. In my case its was host n5 (do not forget to install ansible ).","title":"Compile ARM side libraries for interfacing to Raspberry Pi GPU"},{"location":"pi-stories2/#run_the_ansible_playbook_provisionyml","text":"$ ansible-playbook provision.yml -k --vault-password-file .my_password SSH password: PLAY [all] ************************************************************************************************************************************* TASK [Gathering Facts] ************************************************************************************************************************* ok: [n5] ok: [n3] ok: [n2] ok: [n4] ok: [n1] TASK [user : debug] **************************************************************************************************************************** ok: [n1] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n2] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n3] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n4] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } ok: [n5] => { \"msg\": \"creating user gdha and OpenSSH public key distribution\" } TASK [user : Creating admin group] ************************************************************************************************************* ok: [n3] ok: [n1] ok: [n4] ok: [n2] ok: [n5] TASK [user : Add group gdha (1001)] ************************************************************************************************************ ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [user : Add user 'gdha' with specific uid (1001) and group 'gdha' (1001) and secondary group 'admin'] ************************************* ok: [n5] ok: [n2] ok: [n3] ok: [n1] ok: [n4] TASK [user : Create the /home/gdha/.ssh directory] ********************************************************************************************* ok: [n2] ok: [n1] ok: [n3] ok: [n4] ok: [n5] TASK [user : Copy /home/gdha/.ssh/id_rsa.pub to remote nodes] ********************************************************************************** ok: [n2] ok: [n3] ok: [n1] ok: [n4] ok: [n5] TASK [user : Append public ssh key of gdha to authorized_keys] ********************************************************************************* changed: [n1] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n4] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n2] => (item=/home/gdha/.ssh/id_rsa.pub) changed: [n3] => (item=/home/gdha/.ssh/id_rsa.pub) ok: [n5] => (item=/home/gdha/.ssh/id_rsa.pub) TASK [user : Create /etc/sudoers.d/gdha-sudoers file] ****************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [base : Set /etc/hosts for other nodes] *************************************************************************************************** ok: [n1] => (item=n2) ok: [n2] => (item=n1) ok: [n3] => (item=n1) ok: [n4] => (item=n1) ok: [n5] => (item=n1) ok: [n1] => (item=n3) ok: [n2] => (item=n3) ok: [n3] => (item=n2) ok: [n4] => (item=n2) ok: [n5] => (item=n2) ok: [n1] => (item=n4) ok: [n2] => (item=n4) ok: [n4] => (item=n3) ok: [n3] => (item=n4) ok: [n5] => (item=n3) ok: [n1] => (item=n5) ok: [n2] => (item=n5) ok: [n4] => (item=n5) ok: [n3] => (item=n5) ok: [n5] => (item=n4) TASK [base : Install common packages] ********************************************************************************************************** ok: [n5] changed: [n2] changed: [n3] changed: [n4] changed: [n1] TASK [base : Set default locale] *************************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [base : Enable locale] ******************************************************************************************************************** ok: [n2] ok: [n1] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Create directory /opt/vc/bin] ****************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : copy tvservice to /opt/vc/bin] ***************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Create the /opt/vc/lib directory] ************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Copy /opt/vc/lib/libvchiq_arm.so] ************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Copy /opt/vc/lib/libvcos.so] ******************************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : add /opt/vc/lib to /etc/ld.so.conf file] ******************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Run ldconfig] ********************************************************************************************************************** changed: [n2] changed: [n1] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Check if HDMI is on] *************************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [rpi : Switch off HDMI] ******************************************************************************************************************* changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Ensure rc.local exists] ************************************************************************************************************ changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [rpi : Switch off HDMI on boot] *********************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [os : Set hostname] *********************************************************************************************************************** ok: [n2] ok: [n3] ok: [n1] ok: [n4] ok: [n5] TASK [os : Set /etc/hosts hostname] ************************************************************************************************************ ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [os : Check if swap is enabled] *********************************************************************************************************** changed: [n1] changed: [n2] changed: [n3] changed: [n4] changed: [n5] TASK [os : Disable swap] *********************************************************************************************************************** changed: [n1] => (item=dphys-swapfile swapoff) changed: [n2] => (item=dphys-swapfile swapoff) changed: [n3] => (item=dphys-swapfile swapoff) changed: [n4] => (item=dphys-swapfile swapoff) changed: [n5] => (item=dphys-swapfile swapoff) changed: [n1] => (item=dphys-swapfile uninstall) changed: [n2] => (item=dphys-swapfile uninstall) changed: [n3] => (item=dphys-swapfile uninstall) changed: [n4] => (item=dphys-swapfile uninstall) changed: [n5] => (item=dphys-swapfile uninstall) changed: [n2] => (item=update-rc.d dphys-swapfile disable) changed: [n3] => (item=update-rc.d dphys-swapfile disable) changed: [n1] => (item=update-rc.d dphys-swapfile disable) changed: [n4] => (item=update-rc.d dphys-swapfile disable) changed: [n5] => (item=update-rc.d dphys-swapfile disable) TASK [os : Add users to passwordless sudoers.] ************************************************************************************************* ok: [n1] => (item=gdha) ok: [n2] => (item=gdha) ok: [n3] => (item=gdha) ok: [n4] => (item=gdha) ok: [n5] => (item=gdha) ok: [n1] => (item=ubuntu) ok: [n2] => (item=ubuntu) ok: [n3] => (item=ubuntu) ok: [n4] => (item=ubuntu) ok: [n5] => (item=ubuntu) TASK [ssh : Check if ssh key exists] *********************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Create .ssh directory] ************************************************************************************************************* ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Generate ssh key] ****************************************************************************************************************** skipping: [n5] changed: [n1] changed: [n3] changed: [n2] changed: [n4] TASK [ssh : Slurp public keys from all nodes] ************************************************************************************************** ok: [n1] ok: [n3] ok: [n2] ok: [n4] ok: [n5] TASK [ssh : Copy public keys of all nodes into authorized_keys] ******************************************************************************** skipping: [n1] => (item=n1) skipping: [n1] => (item=n2) skipping: [n1] => (item=n3) skipping: [n1] => (item=n4) skipping: [n1] => (item=n5) skipping: [n2] => (item=n1) skipping: [n2] => (item=n2) skipping: [n2] => (item=n3) skipping: [n2] => (item=n4) skipping: [n2] => (item=n5) skipping: [n3] => (item=n1) skipping: [n3] => (item=n2) skipping: [n3] => (item=n3) skipping: [n3] => (item=n4) skipping: [n3] => (item=n5) skipping: [n4] => (item=n1) skipping: [n4] => (item=n2) skipping: [n4] => (item=n3) skipping: [n4] => (item=n4) skipping: [n4] => (item=n5) skipping: [n5] => (item=n1) skipping: [n5] => (item=n2) skipping: [n5] => (item=n3) skipping: [n5] => (item=n4) skipping: [n5] => (item=n5) TASK [ssh : Copy local public key to authorized_keys] ****************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Slurp host keys from all nodes] **************************************************************************************************** ok: [n1] ok: [n2] ok: [n3] ok: [n4] ok: [n5] TASK [ssh : Insert all nodes into global known_hosts] ****************************************************************************************** ok: [n1] => (item=n1) ok: [n2] => (item=n1) ok: [n3] => (item=n1) ok: [n4] => (item=n1) ok: [n5] => (item=n1) ok: [n2] => (item=n2) ok: [n3] => (item=n2) ok: [n1] => (item=n2) ok: [n4] => (item=n2) ok: [n5] => (item=n2) ok: [n2] => (item=n3) ok: [n3] => (item=n3) ok: [n4] => (item=n3) ok: [n1] => (item=n3) ok: [n5] => (item=n3) ok: [n2] => (item=n4) ok: [n3] => (item=n4) ok: [n4] => (item=n4) ok: [n1] => (item=n4) ok: [n5] => (item=n4) ok: [n2] => (item=n5) ok: [n3] => (item=n5) ok: [n4] => (item=n5) ok: [n1] => (item=n5) ok: [n5] => (item=n5) TASK [ssh : Secure SSH configuration] ********************************************************************************************************** ok: [n1] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*Port', 'line': 'Port 22'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PasswordAuthentication', 'line': 'PasswordAuthentication yes'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PermitRootLogin', 'line': 'PermitRootLogin no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*UseDNS', 'line': 'UseDNS no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*PermitEmptyPasswords', 'line': 'PermitEmptyPasswords no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*ChallengeResponseAuthentication', 'line': 'ChallengeResponseAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n1] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*GSSAPIAuthentication', 'line': 'GSSAPIAuthentication no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*X11Forwarding', 'line': 'X11Forwarding no'}) TASK [ssh : Secure SSH hosts configuration] **************************************************************************************************** ok: [n1] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n2] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n3] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n4] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) ok: [n5] => (item={'regexp': '^[# \\\\t]*HashKnownHosts', 'line': 'HashKnownHosts no'}) PLAY RECAP ************************************************************************************************************************************* n1 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n2 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n3 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n4 : ok=38 changed=8 unreachable=0 failed=0 skipped=1 rescued=0 ignored=0 n5 : ok=37 changed=5 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0","title":"Run the ansible playbook provision.yml"},{"location":"pi-stories2/#references","text":"[1] Ansible pi4-cluster-ansible-roles playbook [2] Source code for ARM side libraries for interfacing to Raspberry Pi GPU","title":"References"},{"location":"pi-stories2/#edit_history","text":"initial post on 09/Sep/2020","title":"Edit history"}]}